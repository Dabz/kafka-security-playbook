version: '3.5'
services:
  # Base docker builds:
  kafka-base:
    build: kafka-base/
    image: kerberos-demo/kafka-base

  zookeeper-base:
    build: zookeeper-base/
    image: kerberos-demo/zookeeper-base


  kdc:
    build: kdc/
    hostname: kdc
    domainname: kerberos_default
    networks:
      - kerberos_default

    container_name: kdc
    volumes:
      - secret:/var/lib/secret
      - ./kdc/krb5.conf:/etc/kdc/krb5.conf
    ports:
      - "8889:88"


  zookeeper1:
    build: zookeeper1/
    container_name: zookeeper1
    hostname: zookeeper1
    domainname: kerberos_default
    networks:
      - kerberos_default

    depends_on:
      - zookeeper-base
      - kdc
    # Required to wait for the keytab to get generated
    restart: on-failure
    environment:
      - KAFKA_OPTS=-Djava.security.auth.login.config=/etc/kafka/zookeeper_server_jaas.conf
    volumes:
      - secret:/var/lib/secret
      - ./kdc/krb5.conf:/etc/krb5.conf

  zookeeper2:
    build: zookeeper2/
    container_name: zookeeper2
    hostname: zookeeper2
    domainname: kerberos_default
    networks:
      - kerberos_default

    depends_on:
      - zookeeper-base
      - kdc
    # Required to wait for the keytab to get generated
    restart: on-failure
    environment:
      - KAFKA_OPTS=-Djava.security.auth.login.config=/etc/kafka/zookeeper_server_jaas.conf
    volumes:
      - secret:/var/lib/secret
      - ./kdc/krb5.conf:/etc/krb5.conf

  zookeeper3:
    build: zookeeper3/
    container_name: zookeeper3
    hostname: zookeeper3
    domainname: kerberos_default
    networks:
      - kerberos_default

    depends_on:
      - zookeeper-base
      - kdc
    # Required to wait for the keytab to get generated
    restart: on-failure
    environment:
      - KAFKA_OPTS=-Djava.security.auth.login.config=/etc/kafka/zookeeper_server_jaas.conf
    volumes:
      - secret:/var/lib/secret
      - ./kdc/krb5.conf:/etc/krb5.conf


  kafka1:
    build: kafka1/
    container_name: kafka1
    hostname: kafka1
    domainname: kerberos_default
    networks:
      - kerberos_default
    depends_on:
      - kafka-base
      - zookeeper1
      - kdc
    # Required to wait for the keytab to get generated
    restart: on-failure
    volumes:
      - secret:/var/lib/secret
      - ./kdc/krb5.conf:/etc/krb5.conf
    #command: "sleep infinity"
    # ports:
    #   - "9092:9092/tcp"
    #   - "9093:9093/tcp"

  #
  kafka2:
    build: kafka2/
    container_name: kafka2
    hostname: kafka2
    domainname: kerberos_default
    networks:
      - kerberos_default
    depends_on:
      - kafka-base
      - zookeeper1
      - kdc
    # Required to wait for the keytab to get generated
    restart: on-failure
    volumes:
      - secret:/var/lib/secret
      - ./kdc/krb5.conf:/etc/krb5.conf
    #command: "sleep infinity"
  #

  #
  kafka3:
    build: kafka3/
    container_name: kafka3
    hostname: kafka3
    domainname: kerberos_default
    networks:
      - kerberos_default
    depends_on:
      - kafka-base
      - zookeeper1
      - kdc
    # Required to wait for the keytab to get generated
    restart: on-failure
    volumes:
      - secret:/var/lib/secret
      - ./kdc/krb5.conf:/etc/krb5.conf
    #command: "sleep infinity"
  #


  client:
    build: client/
    container_name: client
    hostname: client
    domainname: kerberos_default
    networks:
      - kerberos_default
    environment:
      - KAFKA_OPTS=-Djava.security.auth.login.config=/etc/kafka/client_jaas.conf
    depends_on:
      - kafka1
      - kdc
    # Required to wait for the keytab to get generated
    volumes:
      - secret:/var/lib/secret
      - ./kdc/krb5.conf:/etc/krb5.conf



  kafkacat:
    image: confluentinc/cp-kafkacat
    container_name: kafkacat
    hostname: kafkacat
    domainname: kerberos_default
    networks:
      - kerberos_default
    environment:
      - KAFKA_OPTS=-Djava.security.auth.login.config=/etc/kafka/client_jaas.conf
    depends_on:
      - kafka1
      - kdc
    # Required to wait for the keytab to get generated
    volumes:
      - secret:/var/lib/secret
      - ./kdc/krb5.conf:/etc/krb5.conf
    command: "sleep infinity"

volumes:
  secret: {}

networks:
  kerberos_default:
    name: kerberos_default
