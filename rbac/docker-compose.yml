version: '3.4'
services:
    ldap:
        image: osixia/openldap:1.2.3
        hostname: ldap
        container_name: ldap
        environment:
            LDAP_ORGANISATION: "Confluent"
            LDAP_DOMAIN: "confluent.io"
        ports:
            - "389:389"
            - "636:636"
        volumes:
            - "$PWD/ldap/custom:/container/service/slapd/assets/config/bootstrap/ldif/custom"
        command: "--copy-service"

    # remember that the user name is CN=admin,OU=confluent,OU=io and the password is admin
    #
    phpldapadmin-service:
        image: osixia/phpldapadmin:0.7.2
        container_name: ldapadmin-service
        environment:
          - PHPLDAPADMIN_LDAP_HOSTS=ldap
        ports:
          - "6444:443"
        depends_on:
          - ldap

    zookeeper:
        image: ${REPOSITORY}/cp-zookeeper:${TAG}
        hostname: zookeeper
        container_name: zookeeper
        ports:
            - "2181:2181"
        environment:
            ZOOKEEPER_CLIENT_PORT: 2181
            ZOOKEEPER_TICK_TIME: 2000
        healthcheck:
            test: nc -z localhost 2181
            interval: 5s
            retries: 5
            start_period: 30s

    kafka:
        image: ${REPOSITORY}/cp-server:${TAG}
        hostname: kafka
        container_name: kafka
        depends_on:
            - zookeeper
            - ldap
        ports:
            - "8090:8090"
            - "9092:9092"
            - "9093:9093"
            - "9094:9094"
        volumes:
            - ./conf:/tmp/conf
            - ./client-configs:/etc/client-configs
            - ./kafka-registered.sh:/etc/kafka-registered.sh
        healthcheck:
            test: nc -z localhost 8090 && nc -z localhost 9094 && /etc/kafka-registered.sh zookeeper:2181
            interval: 3s
            retries: 15
            start_period: 30s
        environment:
          # ============= CONFIG SHARED BY BROKER AND MDS ===============
          # Setup super.users with unlimited access to cluster
          # for broker it means unlimited access to broker
          # for MDS it means unlimited access to MDS
          # admin is for broker-to-broker communication
          # mds is for MDS to talk to broker
          # alice is an LDAP user - for initial bootstrapping of MDS users
          KAFKA_SUPER_USERS: User:admin;User:mds;User:alice

          # ===================== CONFIGURE BROKER =======================
          # GENERAL CONFIG
          KAFKA_BROKER_ID: 1
          KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
          KAFKA_CONFLUENT_LICENSE_TOPIC_REPLICATION_FACTOR: 1
          KAFKA_CONFLUENT_SCHEMA_REGISTRY_URL: http://schema-registry:8081

          # CONFIGURE LISTENERS
          # RBAC needs separate internal and external listeners
          # OUTSIDE listener is needed if you want to talk to this kafka from your macbook - your macbook is not member of docker network
          # created by compose, so won't know the hostname called 'broker', which will be returned in a list of listeners when console producer or consumer
          # try to get full listener list from bootstrap server
          KAFKA_ADVERTISED_LISTENERS: INTERNAL://localhost:9093,EXTERNAL://kafka:9092,OUTSIDE://localhost:9094
          KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:SASL_PLAINTEXT,EXTERNAL:SASL_PLAINTEXT,OUTSIDE:SASL_PLAINTEXT
          KAFKA_CONFLUENT_METADATA_SECURITY_PROTOCOL: SASL_PLAINTEXT

          # Configure interbroker listener
          KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
          KAFKA_SASL_MECHANISM_INTER_BROKER_PROTOCOL: PLAIN
          KAFKA_LISTENER_NAME_INTERNAL_SASL_ENABLED_MECHANISMS: PLAIN
          # note we're only specifying two users, one for broker-to-broker communication (admin) and one for MDS to talk to broker (mds)
          KAFKA_LISTENER_NAME_INTERNAL_PLAIN_SASL_JAAS_CONFIG: |
                                                              \
                                                              org.apache.kafka.common.security.plain.PlainLoginModule required \
                                                              username="admin" \
                                                              password="admin-secret" \
                                                              user_admin="admin-secret" \
                                                              user_mds="mds-secret";

          # Configure external listener
          KAFKA_LISTENER_NAME_EXTERNAL_SASL_ENABLED_MECHANISMS: OAUTHBEARER
          KAFKA_LISTENER_NAME_EXTERNAL_OAUTHBEARER_SASL_SERVER_CALLBACK_HANDLER_CLASS: io.confluent.kafka.server.plugins.auth.token.TokenBearerValidatorCallbackHandler
          KAFKA_LISTENER_NAME_EXTERNAL_OAUTHBEARER_SASL_LOGIN_CALLBACK_HANDLER_CLASS: io.confluent.kafka.server.plugins.auth.token.TokenBearerServerLoginCallbackHandler
          KAFKA_LISTENER_NAME_EXTERNAL_OAUTHBEARER_SASL_JAAS_CONFIG: |
                                                               \
                                                               org.apache.kafka.common.security.oauthbearer.OAuthBearerLoginModule required \
                                                               publicKeyPath="/tmp/conf/public.pem";

          # Configure outside listener
          KAFKA_LISTENER_NAME_OUTSIDE_SASL_ENABLED_MECHANISMS: OAUTHBEARER
          KAFKA_LISTENER_NAME_OUTSIDE_OAUTHBEARER_SASL_SERVER_CALLBACK_HANDLER_CLASS: io.confluent.kafka.server.plugins.auth.token.TokenBearerValidatorCallbackHandler
          KAFKA_LISTENER_NAME_OUTSIDE_OAUTHBEARER_SASL_LOGIN_CALLBACK_HANDLER_CLASS: io.confluent.kafka.server.plugins.auth.token.TokenBearerServerLoginCallbackHandler
          KAFKA_LISTENER_NAME_OUTSIDE_OAUTHBEARER_SASL_JAAS_CONFIG: |
                                                               \
                                                               org.apache.kafka.common.security.oauthbearer.OAuthBearerLoginModule required \
                                                               publicKeyPath="/tmp/conf/public.pem";

          # CONFIGURE AUTHORIZER
          # Setup kafka to use RBAC authorizer
          KAFKA_AUTHORIZER_CLASS_NAME: io.confluent.kafka.security.authorizer.ConfluentServerAuthorizer

          # ======================== CONFIGURE MDS ====================================
          # Configure how MDS talks to broker
          KAFKA_CONFLUENT_METADATA_BOOTSTRAP_SERVERS: INTERNAL://localhost:9093
          KAFKA_CONFLUENT_METADATA_SASL_MECHANISM: PLAIN
          KAFKA_CONFLUENT_METADATA_SASL_JAAS_CONFIG: |
                                                      \
                                                      org.apache.kafka.common.security.plain.PlainLoginModule required \
                                                      username="mds" \
                                                      password="mds-secret";
          # Configure how MDS stores its data in a topic
          # supposedly more stuff can be overridden with the same prefix
          KAFKA_CONFLUENT_METADATA_TOPIC_REPLICATION_FACTOR: 1

          # Configure MDS listener and http server
          KAFKA_CONFLUENT_METADATA_SERVER_AUTHENTICATION_METHOD: BEARER
          KAFKA_CONFLUENT_METADATA_SERVER_AUTHENTICATION_ROLES: '**'
          KAFKA_CONFLUENT_METADATA_SERVER_LISTENERS: http://0.0.0.0:8090
          KAFKA_CONFLUENT_METADATA_SERVER_ADVERTISED_LISTENERS: http://kafka:8090

          # Configure RBAC token server (authentication)
          KAFKA_CONFLUENT_METADATA_SERVER_TOKEN_AUTH_ENABLE: 'true'
          KAFKA_CONFLUENT_METADATA_SERVER_TOKEN_MAX_LIFETIME_MS: 3600000
          KAFKA_CONFLUENT_METADATA_SERVER_TOKEN_SIGNATURE_ALGORITHM: RS256
          KAFKA_CONFLUENT_METADATA_SERVER_TOKEN_KEY_PATH: /tmp/conf/keypair.pem
          KAFKA_CONFLUENT_METADATA_SERVER_PUBLIC_KEY_PATH: /tmp/conf/public.pem

          # Configure RBAC authorizer
          # KAFKA_CONFLUENT_AUTHORIZER_SCOPE: myCluster
          KAFKA_CONFLUENT_AUTHORIZER_ACCESS_RULE_PROVIDERS: CONFLUENT,ZK_ACL
          # KAFKA_CONFLUENT_AUTHORIZER_METADATA_PROVIDER: RBAC
          KAFKA_CONFLUENT_AUTHORIZER_GROUP_PROVIDER: RBAC
          # KAFKA_CONFLUENT_METADATA_SERVER_SCOPE: ''

          # Configure MDS to talk to AD/LDAP
          KAFKA_LDAP_JAVA_NAMING_FACTORY_INITIAL: com.sun.jndi.ldap.LdapCtxFactory
          KAFKA_LDAP_COM_SUN_JNDI_LDAP_READ_TIMEOUT: 3000
          KAFKA_LDAP_JAVA_NAMING_PROVIDER_URL: ldap://ldap:389
          # how to authenticate to LDAP
          KAFKA_LDAP_JAVA_NAMING_SECURITY_PRINCIPAL: cn=admin,dc=confluent,dc=io
          KAFKA_LDAP_JAVA_NAMING_SECURITY_CREDENTIALS: admin
          KAFKA_LDAP_JAVA_NAMING_SECURITY_AUTHENTICATION: simple
          # how to locate users and groups
          KAFKA_LDAP_USER_SEARCH_BASE: ou=users,dc=confluent,dc=io
          KAFKA_LDAP_GROUP_SEARCH_BASE: ou=groups,dc=confluent,dc=io
          KAFKA_LDAP_USER_NAME_ATTRIBUTE: uid
          KAFKA_LDAP_USER_OBJECT_CLASS: inetOrgPerson
          KAFKA_LDAP_USER_MEMBEROF_ATTRIBUTE: ou
          KAFKA_LDAP_GROUP_NAME_ATTRIBUTE: cn
          KAFKA_LDAP_GROUP_OBJECT_CLASS: posixGroup

          # ======================= CONFIGURE METRICS REPORTER =========================
          KAFKA_METRIC_REPORTERS: io.confluent.metrics.reporter.ConfluentMetricsReporter
          CONFLUENT_METRICS_REPORTER_TOPIC_REPLICAS: 1

          # point at our 'INTERNAL' listener
          CONFLUENT_METRICS_REPORTER_BOOTSTRAP_SERVERS: kafka:9093
          # CONFLUENT_METRICS_REPORTER_ZOOKEEPER_CONNECT: zookeeper:2181
          CONFLUENT_METRICS_REPORTER_SECURITY_PROTOCOL: SASL_PLAINTEXT
          CONFLUENT_METRICS_REPORTER_SASL_MECHANISM: PLAIN
          CONFLUENT_METRICS_REPORTER_SASL_JAAS_CONFIG: |
                                                        \
                                                        org.apache.kafka.common.security.plain.PlainLoginModule required \
                                                        username="admin" \
                                                        password="admin-secret";

          # ======================= OTHER BROKER STUFF =================================
          KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
          # KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
          # CONFLUENT_METRICS_ENABLE: 'true'
          # CONFLUENT_SUPPORT_CUSTOMER_ID: 'anonymous'
